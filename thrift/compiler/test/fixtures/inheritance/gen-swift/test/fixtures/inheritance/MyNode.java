/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package test.fixtures.inheritance;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.service.*;
import com.facebook.swift.transport.client.*;
import com.google.common.util.concurrent.ListenableFuture;
import java.io.*;
import java.util.*;

@SwiftGenerated
@com.facebook.swift.service.ThriftService("MyNode")
public interface MyNode extends java.io.Closeable, test.fixtures.inheritance.MyRoot {
    @com.facebook.swift.service.ThriftService("MyNode")
    public interface Async extends java.io.Closeable, test.fixtures.inheritance.MyRoot.Async {
        @java.lang.Override void close();

        @ThriftMethod(value = "do_mid")
        ListenableFuture<Void> doMid();

        default ListenableFuture<Void> doMid(
            RpcOptions rpcOptions) {
            throw new UnsupportedOperationException();
        }

        default ListenableFuture<ResponseWrapper<Void>> doMidWrapper(
            RpcOptions rpcOptions) {
            throw new UnsupportedOperationException();
        }
    }
    @java.lang.Override void close();

    @ThriftMethod(value = "do_mid")
    void doMid() throws org.apache.thrift.TException;

    default void doMid(
        RpcOptions rpcOptions) throws org.apache.thrift.TException {
        throw new UnsupportedOperationException();
    }

    default ResponseWrapper<Void> doMidWrapper(
        RpcOptions rpcOptions) throws org.apache.thrift.TException {
        throw new UnsupportedOperationException();
    }

    interface Reactive extends Closeable, test.fixtures.inheritance.MyRoot.Reactive {
        @java.lang.Override void close();
        reactor.core.publisher.Mono<Void> doMid();
    }
}
